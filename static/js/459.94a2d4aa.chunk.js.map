{"version":3,"file":"static/js/459.94a2d4aa.chunk.js","mappings":"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","sources":["views/authentication/auth2/Register2.js","views/authentication/authForms/AuthRegister.js"],"sourcesContent":["import React from 'react';\r\nimport { Grid, Box, Card, Typography, Stack } from '@mui/material';\r\nimport { Link } from 'react-router-dom';\r\nimport PageContainer from 'src/components/container/PageContainer';\r\nimport Logo from 'src/layouts/full/shared/logo/Logo';\r\n\r\nimport AuthRegister from '../authForms/AuthRegister';\r\n\r\nconst Register2 = () => (\r\n  <PageContainer title=\"Register\" description=\"this is Register page\">\r\n    <Box\r\n      sx={{\r\n        position: 'relative',\r\n        '&:before': {\r\n          content: '\"\"',\r\n          background: 'radial-gradient(#d2f1df, #d3d7fa, #bad8f4)',\r\n          backgroundSize: '400% 400%',\r\n          animation: 'gradient 15s ease infinite',\r\n          position: 'absolute',\r\n          height: '100%',\r\n          width: '100%',\r\n          opacity: '0.3',\r\n        },\r\n      }}\r\n    >\r\n      <Grid container spacing={0} justifyContent=\"center\" sx={{ height: '100vh' }}>\r\n        <Grid\r\n          item\r\n          xs={12}\r\n          sm={12}\r\n          lg={5}\r\n          xl={4}\r\n          display=\"flex\"\r\n          justifyContent=\"center\"\r\n          alignItems=\"center\"\r\n        >\r\n          <Card elevation={9} sx={{ p: 4, m:3, zIndex: 1, width: '100%', maxWidth: '450px' }}>\r\n            <Box display=\"flex\" alignItems=\"center\" justifyContent=\"center\">\r\n              <Logo />\r\n            </Box>\r\n            <AuthRegister\r\n              subtitle={\r\n                <Stack direction=\"row\" spacing={1} mt={3}>\r\n                  <Typography color=\"textSecondary\" variant=\"h6\" fontWeight=\"400\">\r\n                    Already have an Account?\r\n                  </Typography>\r\n                  <Typography \r\n                    component={Link}\r\n                    to=\"/auth/login2\"\r\n                    fontWeight=\"500\"\r\n                    sx={{\r\n                      textDecoration: 'none',\r\n                      color: 'primary.main',\r\n                    }}\r\n                  >\r\n                    Sign In\r\n                  </Typography>\r\n                </Stack>\r\n              }\r\n            />\r\n          </Card>\r\n        </Grid>\r\n      </Grid>\r\n    </Box>\r\n  </PageContainer>\r\n);\r\n\r\nexport default Register2;\r\n","import { Alert, Box, Button, Divider, Stack, Typography } from '@mui/material';\r\nimport { Form, FormikProvider, useFormik } from 'formik';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport * as Yup from 'yup';\r\n\r\nimport useAuth from 'src/guards/authGuard/UseAuth';\r\nimport useMounted from 'src/guards/authGuard/UseMounted';\r\nimport CustomFormLabel from '../../../components/forms/theme-elements/CustomFormLabel';\r\nimport CustomTextField from '../../../components/forms/theme-elements/CustomTextField';\r\nimport AuthSocialButtons from './AuthSocialButtons';\r\n\r\nconst AuthRegister = ({ title, subtitle, subtext }) => {\r\n  const mounted = useMounted();\r\n  const { signup, CreateUser } = useAuth();\r\n  const navigate = useNavigate();\r\n\r\n  const registerSchema = Yup.object().shape({\r\n    UserName: Yup.string().required('UserName is required'),\r\n    email: Yup.string().email('Email is invalid').required('Email is required'),\r\n    password: Yup.string()\r\n      .min(6, 'Password must be at least 6 characters')\r\n      .required('Password is required'),\r\n\r\n    acceptTerms: Yup.bool().oneOf([true], 'Accept Terms & Conditions is required'),\r\n  });\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      UserName: '',\r\n      email: '',\r\n      password: '',\r\n      policy: true,\r\n      submit: null,\r\n      acceptTerms: true,\r\n    },\r\n\r\n    validationSchema: registerSchema,\r\n\r\n    onSubmit: async (values, { setErrors, setStatus, setSubmitting }) => {\r\n      try {\r\n        const cred = await signup(values.email, values.password);\r\n\r\n        console.log('firebase user created: ', cred);\r\n        CreateUser(cred.user.uid, { username: values.UserName, email: values.email });\r\n\r\n        navigate('/auth/login');\r\n        if (mounted.current) {\r\n          setStatus({ success: true });\r\n          setSubmitting(true);\r\n        }\r\n      } catch (err) {\r\n        if (mounted.current) {\r\n          setStatus({ success: false });\r\n          setErrors({ submit: err.message });\r\n          setSubmitting(false);\r\n        }\r\n      }\r\n    },\r\n  });\r\n\r\n  const { errors, touched, handleSubmit, isSubmitting, getFieldProps } = formik;\r\n\r\n  return (\r\n    <>\r\n      {title ? (\r\n        <Typography fontWeight=\"700\" variant=\"h3\" mb={1}>\r\n          {title}\r\n        </Typography>\r\n      ) : null}\r\n\r\n      {subtext}\r\n      <AuthSocialButtons title=\"Sign up with\" />\r\n\r\n      <Box mt={3}>\r\n        <Divider>\r\n          <Typography\r\n            component=\"span\"\r\n            color=\"textSecondary\"\r\n            variant=\"h6\"\r\n            fontWeight=\"400\"\r\n            position=\"relative\"\r\n            px={2}\r\n          >\r\n            or sign up with\r\n          </Typography>\r\n        </Divider>\r\n      </Box>\r\n\r\n      <Box>\r\n        {errors.submit && (\r\n          <Box mt={2}>\r\n            <Alert severity=\"error\">{errors.submit}</Alert>\r\n          </Box>\r\n        )}\r\n        <FormikProvider value={formik}>\r\n          <Form\r\n            onSubmit={(e) => {\r\n              handleSubmit(e);\r\n            }}\r\n          >\r\n            <Stack mb={3}>\r\n              <CustomFormLabel htmlFor=\"name\">Name</CustomFormLabel>\r\n              <CustomTextField\r\n                id=\"name\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                {...getFieldProps('UserName')}\r\n                error={Boolean(touched.UserName && errors.UserName)}\r\n                helperText={touched.UserName && errors.UserName}\r\n              />\r\n              <CustomFormLabel htmlFor=\"email\">Email Adddress</CustomFormLabel>\r\n              <CustomTextField\r\n                id=\"email\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                {...getFieldProps('email')}\r\n                error={Boolean(touched.email && errors.email)}\r\n                helperText={touched.email && errors.email}\r\n              />\r\n              <CustomFormLabel htmlFor=\"password\">Password</CustomFormLabel>\r\n              <CustomTextField\r\n                id=\"password\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                {...getFieldProps('password')}\r\n                error={Boolean(touched.password && errors.password)}\r\n                helperText={touched.password && errors.password}\r\n              />\r\n              {/* <FormControl\r\n                id=\"acceptTerms\"\r\n                error={Boolean(touched.acceptTerms && errors.acceptTerms)}\r\n                helperText={touched.acceptTerms && errors.acceptTerms}\r\n              >\r\n                <CustomFormLabel>\r\n                  <CustomCheckbox defaultChecked />I Accept the terms and conditions of binary\r\n                  craftsmen\r\n                </CustomFormLabel>\r\n              </FormControl> */}\r\n            </Stack>\r\n            <Button\r\n              color=\"primary\"\r\n              variant=\"contained\"\r\n              size=\"large\"\r\n              fullWidth\r\n              type=\"submit\"\r\n              disabled={isSubmitting}\r\n            >\r\n              Sign Up\r\n            </Button>\r\n          </Form>\r\n        </FormikProvider>\r\n      </Box>\r\n      {subtitle}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AuthRegister;\r\n"],"names":["_jsx","PageContainer","title","description","children","Box","sx","position","content","background","backgroundSize","animation","height","width","opacity","Grid","container","spacing","justifyContent","item","xs","sm","lg","xl","display","alignItems","_jsxs","Card","elevation","p","m","zIndex","maxWidth","Logo","AuthRegister","subtitle","Stack","direction","mt","Typography","color","variant","fontWeight","component","Link","to","textDecoration","_ref","subtext","mounted","useMounted","_useAuth","useAuth","signup","CreateUser","navigate","useNavigate","registerSchema","Yup","shape","UserName","required","email","password","min","acceptTerms","oneOf","formik","useFormik","initialValues","policy","submit","validationSchema","onSubmit","_onSubmit","_asyncToGenerator","_regeneratorRuntime","mark","_callee","values","_ref2","setErrors","setStatus","setSubmitting","cred","wrap","_context","prev","next","sent","console","log","user","uid","username","current","success","t0","message","stop","_x","_x2","apply","arguments","errors","touched","handleSubmit","isSubmitting","getFieldProps","_Fragment","mb","AuthSocialButtons","Divider","px","Alert","severity","FormikProvider","value","Form","e","CustomFormLabel","htmlFor","CustomTextField","_objectSpread","id","fullWidth","error","Boolean","helperText","Button","size","type","disabled"],"sourceRoot":""}