{"version":3,"file":"static/js/153.9aaa5b29.chunk.js","mappings":"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","sources":["views/authentication/auth1/Register.js","views/authentication/authForms/AuthRegister.js"],"sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Grid, Box, Typography, Stack } from '@mui/material';\r\n\r\nimport PageContainer from 'src/components/container/PageContainer';\r\nimport img1 from 'src/assets/images/backgrounds/login-bg.svg';\r\nimport Logo from 'src/layouts/full/shared/logo/Logo';\r\n\r\nimport AuthRegister from '../authForms/AuthRegister';\r\n\r\nconst Register = () => (\r\n  <PageContainer title=\"Register\" description=\"this is Register page\">\r\n    <Grid container spacing={0} justifyContent=\"center\" sx={{ overflowX: 'hidden' }}>\r\n      <Grid\r\n        item\r\n        xs={12}\r\n        sm={12}\r\n        lg={7}\r\n        xl={8}\r\n        sx={{\r\n          position: 'relative',\r\n          '&:before': {\r\n            content: '\"\"',\r\n            background: 'radial-gradient(#d2f1df, #d3d7fa, #bad8f4)',\r\n            backgroundSize: '400% 400%',\r\n            animation: 'gradient 15s ease infinite',\r\n            position: 'absolute',\r\n            height: '100%',\r\n            width: '100%',\r\n            opacity: '0.3',\r\n          },\r\n        }}\r\n      >\r\n        <Box position=\"relative\">\r\n          <Box px={3}>\r\n            <Logo />\r\n          </Box>\r\n          <Box\r\n            alignItems=\"center\"\r\n            justifyContent=\"center\"\r\n            height={'calc(100vh - 75px)'}\r\n            sx={{\r\n              display: {\r\n                xs: 'none',\r\n                lg: 'flex',\r\n              },\r\n            }}\r\n          >\r\n            <img\r\n              src={img1}\r\n              alt=\"bg\"\r\n              style={{\r\n                width: '100%',\r\n                maxWidth: '500px',\r\n              }}\r\n            />\r\n          </Box>\r\n        </Box>\r\n      </Grid>\r\n      <Grid\r\n        item\r\n        xs={12}\r\n        sm={12}\r\n        lg={5}\r\n        xl={4}\r\n        display=\"flex\"\r\n        justifyContent=\"center\"\r\n        alignItems=\"center\"\r\n      >\r\n        <Box p={4}>\r\n          <AuthRegister\r\n            title=\"Welcome to Modernize\"\r\n            subtext={\r\n              <Typography variant=\"subtitle1\" color=\"textSecondary\" mb={1}>\r\n                Your Admin Dashboard\r\n              </Typography>\r\n            }\r\n            subtitle={\r\n              <Stack direction=\"row\" spacing={1} mt={3}>\r\n                <Typography color=\"textSecondary\" variant=\"h6\" fontWeight=\"400\">\r\n                  Already have an Account?\r\n                </Typography>\r\n                <Typography\r\n                  component={Link}\r\n                  to=\"/auth/login\"\r\n                  fontWeight=\"500\"\r\n                  sx={{\r\n                    textDecoration: 'none',\r\n                    color: 'primary.main',\r\n                  }}\r\n                >\r\n                  Sign In\r\n                </Typography>\r\n              </Stack>\r\n            }\r\n          />\r\n        </Box>\r\n      </Grid>\r\n    </Grid>\r\n  </PageContainer>\r\n);\r\n\r\nexport default Register;\r\n","import { Alert, Box, Button, Divider, Stack, Typography } from '@mui/material';\r\nimport { Form, FormikProvider, useFormik } from 'formik';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport * as Yup from 'yup';\r\n\r\nimport useAuth from 'src/guards/authGuard/UseAuth';\r\nimport useMounted from 'src/guards/authGuard/UseMounted';\r\nimport CustomFormLabel from '../../../components/forms/theme-elements/CustomFormLabel';\r\nimport CustomTextField from '../../../components/forms/theme-elements/CustomTextField';\r\nimport AuthSocialButtons from './AuthSocialButtons';\r\n\r\nconst AuthRegister = ({ title, subtitle, subtext }) => {\r\n  const mounted = useMounted();\r\n  const { signup, CreateUser } = useAuth();\r\n  const navigate = useNavigate();\r\n\r\n  const registerSchema = Yup.object().shape({\r\n    UserName: Yup.string().required('UserName is required'),\r\n    email: Yup.string().email('Email is invalid').required('Email is required'),\r\n    password: Yup.string()\r\n      .min(6, 'Password must be at least 6 characters')\r\n      .required('Password is required'),\r\n\r\n    acceptTerms: Yup.bool().oneOf([true], 'Accept Terms & Conditions is required'),\r\n  });\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      UserName: '',\r\n      email: '',\r\n      password: '',\r\n      policy: true,\r\n      submit: null,\r\n      acceptTerms: true,\r\n    },\r\n\r\n    validationSchema: registerSchema,\r\n\r\n    onSubmit: async (values, { setErrors, setStatus, setSubmitting }) => {\r\n      try {\r\n        const cred = await signup(values.email, values.password);\r\n\r\n        console.log('firebase user created: ', cred);\r\n        CreateUser(cred.user.uid, { username: values.UserName, email: values.email });\r\n\r\n        navigate('/auth/login');\r\n        if (mounted.current) {\r\n          setStatus({ success: true });\r\n          setSubmitting(true);\r\n        }\r\n      } catch (err) {\r\n        if (mounted.current) {\r\n          setStatus({ success: false });\r\n          setErrors({ submit: err.message });\r\n          setSubmitting(false);\r\n        }\r\n      }\r\n    },\r\n  });\r\n\r\n  const { errors, touched, handleSubmit, isSubmitting, getFieldProps } = formik;\r\n\r\n  return (\r\n    <>\r\n      {title ? (\r\n        <Typography fontWeight=\"700\" variant=\"h3\" mb={1}>\r\n          {title}\r\n        </Typography>\r\n      ) : null}\r\n\r\n      {subtext}\r\n      <AuthSocialButtons title=\"Sign up with\" />\r\n\r\n      <Box mt={3}>\r\n        <Divider>\r\n          <Typography\r\n            component=\"span\"\r\n            color=\"textSecondary\"\r\n            variant=\"h6\"\r\n            fontWeight=\"400\"\r\n            position=\"relative\"\r\n            px={2}\r\n          >\r\n            or sign up with\r\n          </Typography>\r\n        </Divider>\r\n      </Box>\r\n\r\n      <Box>\r\n        {errors.submit && (\r\n          <Box mt={2}>\r\n            <Alert severity=\"error\">{errors.submit}</Alert>\r\n          </Box>\r\n        )}\r\n        <FormikProvider value={formik}>\r\n          <Form\r\n            onSubmit={(e) => {\r\n              handleSubmit(e);\r\n            }}\r\n          >\r\n            <Stack mb={3}>\r\n              <CustomFormLabel htmlFor=\"name\">Name</CustomFormLabel>\r\n              <CustomTextField\r\n                id=\"name\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                {...getFieldProps('UserName')}\r\n                error={Boolean(touched.UserName && errors.UserName)}\r\n                helperText={touched.UserName && errors.UserName}\r\n              />\r\n              <CustomFormLabel htmlFor=\"email\">Email Adddress</CustomFormLabel>\r\n              <CustomTextField\r\n                id=\"email\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                {...getFieldProps('email')}\r\n                error={Boolean(touched.email && errors.email)}\r\n                helperText={touched.email && errors.email}\r\n              />\r\n              <CustomFormLabel htmlFor=\"password\">Password</CustomFormLabel>\r\n              <CustomTextField\r\n                id=\"password\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                {...getFieldProps('password')}\r\n                error={Boolean(touched.password && errors.password)}\r\n                helperText={touched.password && errors.password}\r\n              />\r\n              {/* <FormControl\r\n                id=\"acceptTerms\"\r\n                error={Boolean(touched.acceptTerms && errors.acceptTerms)}\r\n                helperText={touched.acceptTerms && errors.acceptTerms}\r\n              >\r\n                <CustomFormLabel>\r\n                  <CustomCheckbox defaultChecked />I Accept the terms and conditions of binary\r\n                  craftsmen\r\n                </CustomFormLabel>\r\n              </FormControl> */}\r\n            </Stack>\r\n            <Button\r\n              color=\"primary\"\r\n              variant=\"contained\"\r\n              size=\"large\"\r\n              fullWidth\r\n              type=\"submit\"\r\n              disabled={isSubmitting}\r\n            >\r\n              Sign Up\r\n            </Button>\r\n          </Form>\r\n        </FormikProvider>\r\n      </Box>\r\n      {subtitle}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AuthRegister;\r\n"],"names":["_jsx","PageContainer","title","description","children","_jsxs","Grid","container","spacing","justifyContent","sx","overflowX","item","xs","sm","lg","xl","position","content","background","backgroundSize","animation","height","width","opacity","Box","px","Logo","alignItems","display","src","img1","alt","style","maxWidth","p","AuthRegister","subtext","Typography","variant","color","mb","subtitle","Stack","direction","mt","fontWeight","component","Link","to","textDecoration","_ref","mounted","useMounted","_useAuth","useAuth","signup","CreateUser","navigate","useNavigate","registerSchema","Yup","shape","UserName","required","email","password","min","acceptTerms","oneOf","formik","useFormik","initialValues","policy","submit","validationSchema","onSubmit","_onSubmit","_asyncToGenerator","_regeneratorRuntime","mark","_callee","values","_ref2","setErrors","setStatus","setSubmitting","cred","wrap","_context","prev","next","sent","console","log","user","uid","username","current","success","t0","message","stop","_x","_x2","apply","arguments","errors","touched","handleSubmit","isSubmitting","getFieldProps","_Fragment","AuthSocialButtons","Divider","Alert","severity","FormikProvider","value","Form","e","CustomFormLabel","htmlFor","CustomTextField","_objectSpread","id","fullWidth","error","Boolean","helperText","Button","size","type","disabled"],"sourceRoot":""}